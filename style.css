/* The order of CSS doesn't really matter, but styling the big tags (html and body) first just makes it neater */
html, body {
  	background-color: black;
  	padding: 0;
  	margin: 0;
  	width: 100%;
  	min-height: 100vh;
  	cursor:  url("cursor.cur") 25 25, pointer;
  	display: flex;									/* The The display attribute changes how things are ordered on the */
  	justify-content: center;						/* page, flex is a good one, it's versatile and modern and cood - look it up */
  	align-items: center;

  	-webkit-user-drag: none; 						/* All of this stuff disables dragging and selecting elements, meaning */
  	-webkit-touch-callout: none;					/* users can't accidentally select the triangles, making them seem less */
  	-webkit-user-select: none;						/* like images on a page, and more like part of the background if that makes sense. */
  	-khtml-user-select: none;
  	-moz-user-select: none;							/* All of the things with different prefixes is for browser compatibility. Some */
  	-ms-user-select: none;							/* newer css won't necessarily be universally supported by all browsers, so you may need */
  	-o-user-select: none;							/* to manually use specific browser prefixes. Some browsers simply won't support things. */
  	user-select: none;
}

/* ~~~~~~~~~~~~~~~~~~~~~LINKS~~~~~~~~~~~~~~~~~~~~~~ */

/* The a tag is for links - in this case, the phone numbers. All of this styling does things like remove the default underline and colour, and change it to better fit the theme */
a {
	text-decoration: none;							
}

/* unvisited link */
a:link {
  color: #fcd204;
}

/* visited link */
a:visited {
  color: #fcd204;
}

/* mouse over link */
a:hover {
  color: #032DFB;
}

/* selected link */
a:active {
  color: #032DFB;
}
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* As you can see, I copied this from the internet, this imports custom fonts. */

/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on September 19, 2020 */
@font-face {
    font-family: 'vcr_osd_monoregular';
    src: url('vcr_osd_mono_1.001-webfont.woff2') format('woff2'),
         url('vcr_osd_mono_1.001-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

/* The p tag is a common one, it's used for most of the text on a site, however, there isn't much text on this site. I'm not really sure why this is here ngl. */
p {
    color: #fcd204;
}

/* ~~~~~~~~~~~~~~~~~~~~CREDITS~~~~~~~~~~~~~~~~~~~~~ */

/* Here's all the styling for the credits, it's all quite readable. */
.credits{
	position: fixed;
	bottom: 0;
	left: 50%;
	transform: translate(-50%, 0);
	font-family: 'vcr_osd_monoregular', Arial, sans-serif;
	color: #fcd204;
	font-size: 2vw;					/* vw stands for view width, its a measure of size as a percentage of the total screen width. Good for responsive design. */
}

.credits:hover{
	filter: invert(100);
	cursor: url("pointer.cur") 25 25, pointer;
}

.cred_list{
	font-size: 3vh;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */



/* ~~~~~~~~~~~~~~~~~~~CORNERS~~~~~~~~~~~~~~~~~~~~~~~ */

#corners{
	position: absolute;
	width: 100%;
	height: 100%;
}

#corners img {
    height: 28%;
    width: auto;
	position: absolute;
	pointer-events: none;

}

.topleft {
	top: 0px;
	left: 0px;
}

.topright {
	top: 0px;
	right: 0px;
}

.bottomleft {
	bottom: 0px;
	left: 0px;
}

.bottomright {
	bottom: 0px;
	right: 0px;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* ~~~~~~~~~~~~~~~~~~~TRIANGLES~~~~~~~~~~~~~~~~~~~~~ */

#triangles{
	width:60%;
	margin: 0 auto;
	display: flex;
  	flex-direction: column;
}

.triangles img {
	max-height: 100%;
	max-width: 100%;
	transition: 0.3s;
}

#top-row, #mid-row, #bottom-row {
	display: flex;
	flex-direction: row;
	justify-content: center;
	margin: 3.4%
}


/* This is for the triangles when folded out, because I made it like this first, it's the default tri class */
.tri {
	width: 20%;
	display: flex;
	flex-direction: column;
	text-align: center;
	transform: rotate(180deg) ;
	margin: -5%;
	transition: 0.3s;

	-webkit-clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
	clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
}

.main_tri {
	z-index: 100;
	width: 20%;
	display: flex;
	flex-direction: column;
	text-align: center;
	margin: -5%;
	transition: 0.3s;

	-webkit-clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);			/* Clip paths are funky, they're like the "hitbox" of an element, */
	clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);					/* custom paths are used here to make the element from a default square to a triangle*/
}

.l_tri {
	margin:auto;
	width: 12%;
	height: auto;
	position: fixed;
	top: 0; left: -1%; bottom: 0; right: 88.4%;
	transform: rotate(90deg);
	-webkit-clip-path: polygon(0% 100%, 50% 0%, 57% 10%, 101% 100%);
	clip-path: polygon(0% 100%, 50% 0%, 57% 10%, 101% 100%);
}

.r_tri {
	margin:auto;
	width: 12%;
	height: auto;
	position: fixed;
	top: 0; left: 88.8%; bottom: 0; right: 0;
	transform: rotate(270deg);
	-webkit-clip-path: polygon(0% 100%, 50% 0%, 57% 10%, 101% 100%);
	clip-path: polygon(0% 100%, 50% 0%, 57% 10%, 101% 100%);
}

.start_tri_l {
	width: 20%;
	display: flex;
	flex-direction: column;
	text-align: center;
	transform: translateX(50%);
	margin: -5%;
	transition: 0.3s;

	-webkit-clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
	clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
}

.start_tri_r {
	width: 20%;
	display: flex;
	flex-direction: column;
	text-align: center;
	transform: translateX(-50%);
	margin: -5%;
	transition: 0.3s;

	-webkit-clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
	clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
}

.start_tri_bottom {
	width: 20%;
	display: flex;
	flex-direction: column;
	text-align: center;
	transform: translateY(-86%);
	margin: -5%;
	transition: 0.3s;

	-webkit-clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
	clip-path: polygon(0% 93%, 50% 6%, 54% 13%, 100% 93%);
}

/* This all makes the triangles invert colour on hover and also has the funny upside down cursor */
.tri:hover {
	filter: invert(100%);
	transition: 0.3s;
	cursor: url("pointer.cur") 25 25, pointer;
}
.main_tri:hover {
	filter: invert(100%);
	transition: 0.3s;
	cursor: url("pointer.cur") 25 25, pointer;
}
.r_tri:hover {
	filter: invert(100%);
	transition: 0.3s;
	cursor: url("pointer.cur") 25 25, pointer;
}
.l_tri:hover {
	filter: invert(100%);
	transition: 0.3s;
	cursor: url("pointer.cur") 25 25, pointer;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


/* ~~~~~~~~~~~~~~~~~~~~~MODALS~~~~~~~~~~~~~~~~~~~~~~~~ */

.modal {
  display: none; 							/* Hidden by default */
  position: fixed;
  padding-top: 6%;
  width: 100%;								/* This makes the modal fill the whole screen */
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);			/* Backup colour without opacity incase the browser doesnt support it, css reads from top to bottom so this will be ignored. */
  background-color: rgba(0,0,0,0.4);	/* Make the background black with opacity */
  z-index: 1000; 							/* Make it on top lol maybe a bit overkill but whatever*/
}

/* Modal Content */
.modal-content {
  background-color: #000000;
  margin: auto;
  padding: 2%;
  border: 15px double #fcd204;
  width: 80%;
  height: 80%
}

/* The Close Button */
.close {
  color: #fcd204;
  float: right;
  font-size: 35px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  text-decoration: none;
  cursor: url("pointer.cur") 25 25, pointer;
}

iframe {
	border: 10px double #fcd204;
	width: 93%; 
	height: 96%;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


/* ~~~~~~~~~~~~~~~~~~~PHONE NUMBERS~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

.numbers_box {
	font-family: 'vcr_osd_monoregular', Arial, sans-serif;
	width: 100%;
    height: 89%;
    font-size: 200%;
    color: #fcd204;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}

.num_list {
    padding: 0;
    margin: 0;
    height: 50%;
    list-style: none;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.num_list li {
	font-size: 7vw;
}

.num_info {
	bottom:0;
	position: absolute;
	font-size: 4vw;
	text-align: center;
}

.call_now {
	top:0;
	position: absolute;
	font-size: 6vw;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */


/* ~~~~~~~~~~~~~~~~~MEDIA QUERIES~~~~~~~~~~~~~~~~~~~~~~~~ */

/* OK, these are exciting, this means you can change the attributes of a class under certain conditions, most commonly, screen size. */
/* This is generally used to make sites look better on mobile, with 768px being the standard cutoff for device width. */
@media only screen and (max-width:768px) {
  /* For mobile phones: */
  #triangles {
    width:100%;
  }
  .l_tri {
    transform: rotate(180deg);
    bottom: 87.7%;
    right: 0%;
    height: 12.2%;
    width: auto;
  }
  .r_tri {
    transform: rotate(0deg);
    top: 87.7%;
    left: 0%;
    height: 12.2%;
    width: auto;
  }
  #corners img {
  	width: 25%;
  	height: auto;
  }
  iframe {
  	height:87%; 
  }
  .credits{
  	font-size: 2vh;
  	bottom: 50%;
  	left:0;
  	transform: translate(-40%,-50%) rotate(90deg);
  }
}

/* And that's it! Pretty straightforward huh? If you've got any questions you know how to contact me :) */